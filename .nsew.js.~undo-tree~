(undo-tree-save-format-version . 1)
"639406734db1ca5d1b8b3123b1ec6a713df6736b"
[nil nil nil nil (25619 50345 165679 211000) 0 nil]
([nil nil ((#("export " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 6734)) nil (25619 50354 332293 27000) 0 nil] [nil nil ((#("/**
*  Make the table that will serve as the keyboard's structure from an array
*  of characters that indicate the layout.
*/
export function makeGrid(conf) {
    'use strict';
    console.assert(conf instanceof Array, 'Feed me an Array!');
    let kbdKeys = genKbdKeys(conf);
    let gridContents = [];
    let tbl = document.createElement('table');
    tbl.id = 'kbd';

    function Cell (elem, quant) {
        'use strict';
        this.elem = elem;
        this.quant = quant;
        this.incr = function () {
            this.quant++;
        };
    }

    function mkCells (line) {
        'use strict';
        let objs = [];
        for (let c in line) {
            if (line[c] === '*' || (line[c] !== line[c-1] && line[c] !== '_')) {
                let ob = new Cell(line[c], 1);
                objs.push(ob);
            } else {
                objs[objs.length-1].incr();
            }
        }
        return objs;
    }

    for (let ln in conf) {
        let tr = document.createElement('tr');
        let lin = mkCells(conf[ln]);

        for (let ob in lin) {
            let keyId = kbdKeys.indexOf(lin[ob].elem);
            let celSp = lin[ob].quant;
            let td = document.createElement('td');

            if (keyId >= 0) {
                td.id = keyId;
                td.classList.add('key');
            }
            if (keyId >= 0 && keyId <= 25) {
                td.classList.add('char');
            }
            if (keyId === 26) {
                td.classList.add('mode', 'active');
            }
            if (celSp > 1) {
                td.colSpan = celSp;
            }
            tr.appendChild(td);
        }
        tbl.appendChild(tr);
    }
    return tbl;
}

/** Insert the keyboard in the destination html element. */
function insertKbd(grid) {
    let container = document.getElementById('NSEW_container');
    let kbd = makeGrid(grid);
    container.appendChild(kbd);
}

" 0 125 (face font-lock-doc-face fontified t) 125 126 (fontified t) 126 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 141 (face font-lock-keyword-face fontified t) 141 142 (fontified t) 142 150 (fontified t) 150 151 (face (rainbow-delimiters-depth-1-face) fontified t) 151 155 (face font-lock-variable-name-face fontified t) 155 156 (face (rainbow-delimiters-depth-1-face) fontified t) 156 157 (fontified t) 157 158 (face (rainbow-delimiters-depth-1-face) js--pstate ((nil 0 function 6741 ("makeGrid") nil) (((nil 0 function 6408 ("genKbdKeys") nil) (nil 0 function 5303 ("draw") nil) (nil 0 function 4527 ("select") nil) (nil 0 function 3396 ("walk") nil) (nil 0 function 3016 ("populate") nil) (nil 1 function 2051 t nil) (nil 1 function 1826 ("alter") nil) (nil 1 function 1752 ("def") nil)) -2305843009213693952 toplevel nil nil nil)) fontified t) 158 159 (fontified t) 159 163 (fontified t) 163 175 (face font-lock-string-face fontified t) 175 195 (fontified t) 195 196 (face (rainbow-delimiters-depth-2-face) fontified t) 196 201 (fontified t) 201 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 217 (face font-lock-type-face fontified t) 217 219 (fontified t) 219 229 (face font-lock-string-face fontified t) 229 238 (face font-lock-string-face fontified t) 238 239 (face (rainbow-delimiters-depth-2-face) fontified t) 239 241 (fontified t) 241 245 (fontified t) 245 248 (face font-lock-keyword-face fontified t) 248 249 (fontified t) 249 256 (face font-lock-variable-name-face fontified t) 256 269 (fontified t) 269 270 (face (rainbow-delimiters-depth-2-face) fontified t) 270 274 (fontified t) 274 275 (face (rainbow-delimiters-depth-2-face) fontified t) 275 281 (fontified t) 281 284 (face font-lock-keyword-face fontified t) 284 285 (fontified t) 285 297 (face font-lock-variable-name-face fontified t) 297 300 (fontified t) 300 301 (face (rainbow-delimiters-depth-2-face) fontified t) 301 302 (face (rainbow-delimiters-depth-2-face) fontified t) 302 308 (fontified t) 308 311 (face font-lock-keyword-face fontified t) 311 312 (fontified t) 312 315 (face font-lock-variable-name-face fontified t) 315 340 (fontified t) 340 341 (face (rainbow-delimiters-depth-2-face) fontified t) 341 348 (face font-lock-string-face fontified t) 348 349 (face (rainbow-delimiters-depth-2-face) fontified t) 349 364 (fontified t) 364 369 (face font-lock-string-face fontified t) 369 376 (fontified t) 376 384 (face font-lock-keyword-face fontified t) 384 385 (fontified t) 385 389 (face font-lock-function-name-face fontified t) 389 390 (fontified t) 390 391 (face (rainbow-delimiters-depth-2-face) fontified t) 391 395 (face font-lock-variable-name-face fontified t) 395 397 (fontified t) 397 402 (face font-lock-variable-name-face fontified t) 402 403 (face (rainbow-delimiters-depth-2-face) fontified t) 403 404 (fontified t) 404 405 (face (rainbow-delimiters-depth-2-face) js--pstate ((nil 1 function 6984 ("Cell") nil) (nil 0 function 6741 ("makeGrid") nil) (((nil 0 function 6408 ("genKbdKeys") nil) (nil 0 function 5303 ("draw") nil) (nil 0 function 4527 ("select") nil) (nil 0 function 3396 ("walk") nil) (nil 0 function 3016 ("populate") nil) (nil 1 function 2051 t nil) (nil 1 function 1826 ("alter") nil) (nil 1 function 1752 ("def") nil)) -2305843009213693952 toplevel nil nil nil)) fontified t) 405 414 (fontified t) 414 426 (face font-lock-string-face fontified t) 426 436 (fontified t) 436 440 (face font-lock-constant-face fontified t) 440 462 (fontified t) 462 466 (face font-lock-constant-face fontified t) 466 490 (fontified t) 490 494 (face font-lock-constant-face fontified t) 494 502 (fontified t) 502 510 (face font-lock-keyword-face fontified t) 510 511 (fontified t) 511 512 (face (rainbow-delimiters-depth-3-face) fontified t) 512 513 (face (rainbow-delimiters-depth-3-face) fontified t) 513 514 (fontified t) 514 515 (face (rainbow-delimiters-depth-3-face) js--pstate ((nil 2 function 7098 ("this" "incr") nil) (nil 1 function 6984 ("Cell") nil) (nil 0 function 6741 ("makeGrid") nil) (((nil 0 function 6408 ("genKbdKeys") nil) (nil 0 function 5303 ("draw") nil) (nil 0 function 4527 ("select") nil) (nil 0 function 3396 ("walk") nil) (nil 0 function 3016 ("populate") nil) (nil 1 function 2051 t nil) (nil 1 function 1826 ("alter") nil) (nil 1 function 1752 ("def") nil)) -2305843009213693952 toplevel nil nil nil)) fontified t) 515 528 (fontified t) 528 532 (face font-lock-constant-face fontified t) 532 550 (fontified t) 550 551 (face (rainbow-delimiters-depth-3-face) js--pend (nil 2 function 7098 ("this" "incr") nil) fontified t) 551 557 (fontified t) 557 558 (face (rainbow-delimiters-depth-2-face) js--pend (((((nil 2 function 7098 ("this" "incr") nil)) nil (:name "[Automatically Generated Class]") nil "this" nil)) 1 function 6984 ("Cell") nil) fontified t) 558 564 (fontified t) 564 572 (face font-lock-keyword-face fontified t) 572 573 (fontified t) 573 580 (face font-lock-function-name-face fontified t) 580 581 (fontified t) 581 582 (face (rainbow-delimiters-depth-2-face) fontified t) 582 586 (face font-lock-variable-name-face fontified t) 586 587 (face (rainbow-delimiters-depth-2-face) fontified t) 587 588 (fontified t) 588 589 (face (rainbow-delimiters-depth-2-face) js--pstate ((nil 1 function 7172 ("mkCells") nil) (((((((nil 2 function 7098 ("this" "incr") nil)) nil (:name "[Automatically Generated Class]") nil "this" nil)) 1 function 6984 ("Cell") nil)) 0 function 6741 ("makeGrid") nil) (((nil 0 function 6408 ("genKbdKeys") nil) (nil 0 function 5303 ("draw") nil) (nil 0 function 4527 ("select") nil) (nil 0 function 3396 ("walk") nil) (nil 0 function 3016 ("populate") nil) (nil 1 function 2051 t nil) (nil 1 function 1826 ("alter") nil) (nil 1 function 1752 ("def") nil)) -2305843009213693952 toplevel nil nil nil)) fontified t) 589 598 (fontified t) 598 610 (face font-lock-string-face fontified t) 610 620 (fontified t) 620 623 (face font-lock-keyword-face fontified t) 623 624 (fontified t) 624 628 (face font-lock-variable-name-face fontified t) 628 631 (fontified t) 631 632 (face (rainbow-delimiters-depth-3-face) fontified t) 632 633 (face (rainbow-delimiters-depth-3-face) fontified t) 633 643 (fontified t) 643 646 (face font-lock-keyword-face fontified t) 646 647 (fontified t) 647 648 (face (rainbow-delimiters-depth-3-face) fontified t) 648 651 (face font-lock-keyword-face fontified t) 651 652 (fontified t) 652 653 (face font-lock-variable-name-face fontified t) 653 654 (fontified t) 654 656 (face font-lock-keyword-face fontified t) 656 659 (fontified t) 659 661 (fontified t) 661 662 (fontified t face (rainbow-delimiters-depth-3-face)) 662 663 (fontified t) 663 664 (fontified t face (rainbow-delimiters-depth-3-face)) 664 665 (fontified t) 665 677 (fontified t) 677 679 (face font-lock-keyword-face fontified t) 679 680 (fontified t) 680 681 (face (rainbow-delimiters-depth-4-face) fontified t) 681 685 (fontified t) 685 686 (face (rainbow-delimiters-depth-5-face) fontified t) 686 687 (fontified t) 687 688 (face (rainbow-delimiters-depth-5-face) fontified t) 688 693 (fontified t) 693 696 (face font-lock-string-face fontified t) 696 700 (fontified t) 700 701 (face (rainbow-delimiters-depth-5-face) fontified t) 701 705 (fontified t) 705 706 (face (rainbow-delimiters-depth-6-face) fontified t) 706 707 (fontified t) 707 708 (face (rainbow-delimiters-depth-6-face) fontified t) 708 717 (fontified t) 717 718 (face (rainbow-delimiters-depth-6-face) fontified t) 718 721 (fontified t) 721 722 (face (rainbow-delimiters-depth-6-face) fontified t) 722 730 (fontified t) 730 731 (face (rainbow-delimiters-depth-6-face) fontified t) 731 732 (fontified t) 732 733 (face (rainbow-delimiters-depth-6-face) fontified t) 733 738 (fontified t) 738 741 (face font-lock-string-face fontified t) 741 742 (face (rainbow-delimiters-depth-5-face) fontified t) 742 743 (face (rainbow-delimiters-depth-4-face) fontified t) 743 744 (fontified t) 744 745 (face (rainbow-delimiters-depth-4-face) fontified t) 745 746 (fontified t) 746 762 (fontified t) 762 765 (face font-lock-keyword-face fontified t) 765 766 (fontified t) 766 768 (face font-lock-variable-name-face fontified t) 768 771 (fontified t) 771 774 (face font-lock-keyword-face fontified t) 774 775 (fontified t) 775 779 (face font-lock-type-face fontified t) 779 780 (face (rainbow-delimiters-depth-5-face) fontified t) 780 784 (fontified t) 784 785 (face (rainbow-delimiters-depth-6-face) fontified t) 785 786 (fontified t) 786 787 (face (rainbow-delimiters-depth-6-face) fontified t) 787 790 (fontified t) 790 791 (face (rainbow-delimiters-depth-5-face) fontified t) 791 818 (fontified t) 818 819 (face (rainbow-delimiters-depth-5-face) fontified t) 819 821 (fontified t) 821 822 (face (rainbow-delimiters-depth-5-face) fontified t) 822 836 (fontified t) 836 837 (face (rainbow-delimiters-depth-4-face) fontified t) 837 838 (fontified t) 838 842 (face font-lock-keyword-face fontified t) 842 843 (fontified t) 843 844 (face (rainbow-delimiters-depth-4-face) fontified t) 844 865 (fontified t) 865 866 (face (rainbow-delimiters-depth-5-face) fontified t) 866 879 (fontified t) 879 880 (face (rainbow-delimiters-depth-5-face) fontified t) 880 885 (fontified t) 885 886 (face (rainbow-delimiters-depth-5-face) fontified t) 886 887 (face (rainbow-delimiters-depth-5-face) fontified t) 887 901 (fontified t) 901 902 (face (rainbow-delimiters-depth-4-face) fontified t) 902 911 (fontified t) 911 912 (face (rainbow-delimiters-depth-3-face) fontified t) 912 921 (fontified t) 921 927 (face font-lock-keyword-face fontified t) 927 938 (fontified t) 938 939 (js--pend (nil 1 function 7172 ("mkCells") nil) face (rainbow-delimiters-depth-2-face) fontified t) 939 945 (fontified t) 945 948 (face font-lock-keyword-face fontified t) 948 949 (fontified t) 949 950 (face (rainbow-delimiters-depth-2-face) fontified t) 950 953 (face font-lock-keyword-face fontified t) 953 954 (fontified t) 954 956 (face font-lock-variable-name-face fontified t) 956 957 (fontified t) 957 959 (face font-lock-keyword-face fontified t) 959 964 (fontified t) 964 965 (face (rainbow-delimiters-depth-2-face) fontified t) 965 966 (fontified t) 966 967 (face (rainbow-delimiters-depth-2-face) fontified t) 967 976 (fontified t) 976 979 (face font-lock-keyword-face fontified t) 979 980 (fontified t) 980 982 (face font-lock-variable-name-face fontified t) 982 1007 (fontified t) 1007 1008 (face (rainbow-delimiters-depth-3-face) fontified t) 1008 1012 (face font-lock-string-face fontified t) 1012 1013 (face (rainbow-delimiters-depth-3-face) fontified t) 1013 1023 (fontified t) 1023 1026 (face font-lock-keyword-face fontified t) 1026 1027 (fontified t) 1027 1030 (face font-lock-variable-name-face fontified t) 1030 1040 (fontified t) 1040 1041 (face (rainbow-delimiters-depth-3-face) fontified t) 1041 1045 (fontified t) 1045 1046 (face (rainbow-delimiters-depth-4-face) fontified t) 1046 1048 (fontified t) 1048 1049 (face (rainbow-delimiters-depth-4-face) fontified t) 1049 1050 (face (rainbow-delimiters-depth-3-face) fontified t) 1050 1061 (fontified t) 1061 1064 (face font-lock-keyword-face fontified t) 1064 1065 (fontified t) 1065 1066 (face (rainbow-delimiters-depth-3-face) fontified t) 1066 1069 (face font-lock-keyword-face fontified t) 1069 1070 (fontified t) 1070 1072 (face font-lock-variable-name-face fontified t) 1072 1073 (fontified t) 1073 1075 (face font-lock-keyword-face fontified t) 1075 1079 (fontified t) 1079 1080 (face (rainbow-delimiters-depth-3-face) fontified t) 1080 1081 (fontified t) 1081 1082 (face (rainbow-delimiters-depth-3-face) fontified t) 1082 1095 (fontified t) 1095 1098 (face font-lock-keyword-face fontified t) 1098 1099 (fontified t) 1099 1104 (face font-lock-variable-name-face fontified t) 1104 1122 (fontified t) 1122 1123 (face (rainbow-delimiters-depth-4-face) fontified t) 1123 1126 (fontified t) 1126 1127 (face (rainbow-delimiters-depth-5-face) fontified t) 1127 1129 (fontified t) 1129 1130 (face (rainbow-delimiters-depth-5-face) fontified t) 1130 1135 (fontified t) 1135 1136 (face (rainbow-delimiters-depth-4-face) fontified t) 1136 1150 (fontified t) 1150 1153 (face font-lock-keyword-face fontified t) 1153 1154 (fontified t) 1154 1159 (face font-lock-variable-name-face fontified t) 1159 1165 (fontified t) 1165 1166 (fontified t face (rainbow-delimiters-depth-4-face)) 1166 1168 (fontified t) 1168 1169 (fontified t face (rainbow-delimiters-depth-4-face)) 1169 1177 (fontified t) 1177 1189 (fontified t) 1189 1192 (face font-lock-keyword-face fontified t) 1192 1193 (fontified t) 1193 1195 (face font-lock-variable-name-face fontified t) 1195 1220 (fontified t) 1220 1221 (face (rainbow-delimiters-depth-4-face) fontified t) 1221 1225 (face font-lock-string-face fontified t) 1225 1226 (face (rainbow-delimiters-depth-4-face) fontified t) 1226 1241 (fontified t) 1241 1243 (face font-lock-keyword-face fontified t) 1243 1244 (fontified t) 1244 1245 (face (rainbow-delimiters-depth-4-face) fontified t) 1245 1255 (fontified t) 1255 1256 (face (rainbow-delimiters-depth-4-face) fontified t) 1256 1257 (fontified t) 1257 1258 (face (rainbow-delimiters-depth-4-face) fontified t) 1258 1322 (fontified t) 1322 1323 (face (rainbow-delimiters-depth-5-face) fontified t) 1323 1328 (face font-lock-string-face fontified t) 1328 1329 (face (rainbow-delimiters-depth-5-face) fontified t) 1329 1343 (fontified t) 1343 1344 (face (rainbow-delimiters-depth-4-face) fontified t) 1344 1357 (fontified t) 1357 1359 (face font-lock-keyword-face fontified t) 1359 1360 (fontified t) 1360 1361 (face (rainbow-delimiters-depth-4-face) fontified t) 1361 1386 (fontified t) 1386 1387 (face (rainbow-delimiters-depth-4-face) fontified t) 1387 1388 (fontified t) 1388 1389 (face (rainbow-delimiters-depth-4-face) fontified t) 1389 1422 (fontified t) 1422 1423 (face (rainbow-delimiters-depth-5-face) fontified t) 1423 1429 (face font-lock-string-face fontified t) 1429 1430 (face (rainbow-delimiters-depth-5-face) fontified t) 1430 1444 (fontified t) 1444 1445 (face (rainbow-delimiters-depth-4-face) fontified t) 1445 1458 (fontified t) 1458 1460 (face font-lock-keyword-face fontified t) 1460 1461 (fontified t) 1461 1462 (face (rainbow-delimiters-depth-4-face) fontified t) 1462 1474 (fontified t) 1474 1475 (face (rainbow-delimiters-depth-4-face) fontified t) 1475 1476 (fontified t) 1476 1477 (face (rainbow-delimiters-depth-4-face) fontified t) 1477 1510 (fontified t) 1510 1511 (face (rainbow-delimiters-depth-5-face) fontified t) 1511 1517 (face font-lock-string-face fontified t) 1517 1519 (fontified t) 1519 1527 (face font-lock-string-face fontified t) 1527 1528 (face (rainbow-delimiters-depth-5-face) fontified t) 1528 1542 (fontified t) 1542 1543 (face (rainbow-delimiters-depth-4-face) fontified t) 1543 1556 (fontified t) 1556 1558 (face font-lock-keyword-face fontified t) 1558 1559 (fontified t) 1559 1560 (face (rainbow-delimiters-depth-4-face) fontified t) 1560 1569 (fontified t) 1569 1570 (face (rainbow-delimiters-depth-4-face) fontified t) 1570 1571 (fontified t) 1571 1572 (face (rainbow-delimiters-depth-4-face) fontified t) 1572 1621 (fontified t) 1621 1622 (face (rainbow-delimiters-depth-4-face) fontified t) 1622 1649 (fontified t) 1649 1650 (face (rainbow-delimiters-depth-4-face) fontified t) 1650 1652 (fontified t) 1652 1653 (face (rainbow-delimiters-depth-4-face) fontified t) 1653 1663 (fontified t) 1663 1664 (face (rainbow-delimiters-depth-3-face) fontified t) 1664 1677 (fontified t) 1677 1688 (fontified t) 1688 1689 (fontified t face (rainbow-delimiters-depth-3-face)) 1689 1691 (fontified t) 1691 1692 (fontified t face (rainbow-delimiters-depth-3-face)) 1692 1694 (fontified t) 1694 1698 (fontified t) 1698 1699 (face (rainbow-delimiters-depth-2-face) fontified t) 1699 1704 (fontified t) 1704 1710 (face font-lock-keyword-face fontified t) 1710 1716 (fontified t) 1716 1717 (face (rainbow-delimiters-depth-1-face) js--pend (((nil 1 function 7172 ("mkCells") nil) (((((nil 2 function 7098 ("this" "incr") nil)) nil (:name "[Automatically Generated Class]") nil "this" nil)) 1 function 6984 ("Cell") nil)) 0 function 6741 ("makeGrid") nil) fontified t) 1717 1719 (fontified t) 1719 1778 (face font-lock-doc-face fontified t) 1778 1779 (fontified t) 1779 1787 (face font-lock-keyword-face fontified t) 1787 1788 (fontified t) 1788 1797 (face font-lock-function-name-face fontified t) 1797 1798 (face (rainbow-delimiters-depth-1-face) fontified t) 1798 1802 (face font-lock-variable-name-face fontified t) 1802 1803 (face (rainbow-delimiters-depth-1-face) fontified t) 1803 1804 (fontified t) 1804 1805 (face (rainbow-delimiters-depth-1-face) js--pstate ((nil 0 function 8387 ("insertKbd") nil) (((((nil 1 function 7172 ("mkCells") nil) (((((nil 2 function 7098 ("this" "incr") nil)) nil (:name "[Automatically Generated Class]") nil "this" nil)) 1 function 6984 ("Cell") nil)) 0 function 6741 ("makeGrid") nil) (nil 0 function 6408 ("genKbdKeys") nil) (nil 0 function 5303 ("draw") nil) (nil 0 function 4527 ("select") nil) (nil 0 function 3396 ("walk") nil) (nil 0 function 3016 ("populate") nil) (nil 1 function 2051 t nil) (nil 1 function 1826 ("alter") nil) (nil 1 function 1752 ("def") nil)) -2305843009213693952 toplevel nil nil nil)) fontified t) 1805 1810 (fontified t) 1810 1813 (face font-lock-keyword-face fontified t) 1813 1814 (fontified t) 1814 1823 (face font-lock-variable-name-face fontified t) 1823 1849 (fontified t) 1849 1850 (face (rainbow-delimiters-depth-2-face) fontified t) 1850 1866 (face font-lock-string-face fontified t) 1866 1867 (face (rainbow-delimiters-depth-2-face) fontified t) 1867 1873 (fontified t) 1873 1876 (face font-lock-keyword-face fontified t) 1876 1877 (fontified t) 1877 1880 (face font-lock-variable-name-face fontified t) 1880 1891 (fontified t) 1891 1892 (face (rainbow-delimiters-depth-2-face) fontified t) 1892 1896 (fontified t) 1896 1897 (face (rainbow-delimiters-depth-2-face) fontified t) 1897 1924 (fontified t) 1924 1925 (face (rainbow-delimiters-depth-2-face) fontified t) 1925 1928 (fontified t) 1928 1929 (face (rainbow-delimiters-depth-2-face) fontified t) 1929 1931 (fontified t) 1931 1932 (face (rainbow-delimiters-depth-1-face) js--pend (nil 0 function 8387 ("insertKbd") nil) fontified t) 1932 1934 (fontified t)) . 6608) (undo-tree-id5 . -1933) (undo-tree-id6 . -968) (undo-tree-id7 . -1934) (undo-tree-id8 . -1934) (undo-tree-id9 . -1933) (undo-tree-id10 . -1934) (undo-tree-id11 . -1933) (undo-tree-id12 . -1933) (undo-tree-id13 . -1933) 8541) ((6608 . 8542)) (25619 50344 261006 140000) 0 nil] [nil nil ((#("export " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 6734) (t 25619 45300 297246 234000)) ((6734 . 6741) (t 25619 49952 166986 82000)) (25619 49952 88430 379000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8588 . 8589) (nil fontified nil 8534 . 8589) (8534 . 8589) (t 25619 50354 408822 455000)) nil (25619 57921 613316 29000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1) (undo-tree-id4 . -1) 2 (1 . 2) (1 . 2)) ((#("
" 0 1 (fontified nil)) . 1) (undo-tree-id141 . -1) (undo-tree-id142 . 1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . 1) (#(" " 0 1 (fontified nil)) . 1) (undo-tree-id146 . -1) (1 . 2)) (25619 50342 365419 729000) 0 nil])
nil
([nil nil ((8575 . 8579) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -8575) (undo-tree-id161 . -1) 8576 (8573 . 8576) (8560 . 8573) (8539 . 8560) (8535 . 8539) (8534 . 8535) (8533 . 8534) 8532) nil (25619 57921 613313 243000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -1935) (1 . 1936)) ((#("
/**
*  Make the table that will serve as the keyboard's structure from an array
*  of characters that indicate the layout.
*/
export function makeGrid(conf) {
    'use strict';
    console.assert(conf instanceof Array, 'Feed me an Array!');
    let kbdKeys = genKbdKeys(conf);
    let gridContents = [];
    let tbl = document.createElement('table');
    tbl.id = 'kbd';

    function Cell (elem, quant) {
        'use strict';
        this.elem = elem;
        this.quant = quant;
        this.incr = function () {
            this.quant++;
        };
    }

    function mkCells (line) {
        'use strict';
        let objs = [];
        for (let c in line) {
            if (line[c] === '*' || (line[c] !== line[c-1] && line[c] !== '_')) {
                let ob = new Cell(line[c], 1);
                objs.push(ob);
            } else {
                objs[objs.length-1].incr();
            }
        }
        return objs;
    }

    for (let ln in conf) {
        let tr = document.createElement('tr');
        let lin = mkCells(conf[ln]);

        for (let ob in lin) {
            let keyId = kbdKeys.indexOf(lin[ob].elem);
            let celSp = lin[ob].quant;
            let td = document.createElement('td');

            if (keyId >= 0) {
                td.id = keyId;
                td.classList.add('key');
            }
            if (keyId >= 0 && keyId <= 25) {
                td.classList.add('char');
            }
            if (keyId === 26) {
                td.classList.add('mode', 'active');
            }
            if (celSp > 1) {
                td.colSpan = celSp;
            }
            tr.appendChild(td);
        }
        tbl.appendChild(tr);
    }
    return tbl;
}

/** Insert the keyboard in the destination html element. */
function insertKbd(grid) {
    let container = document.getElementById('NSEW_container');
    let kbd = makeGrid(grid);
    container.appendChild(kbd);
}

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face font-lock-doc-face fontified nil) 2 4 (face font-lock-doc-face fontified nil) 4 5 (face font-lock-doc-face fontified nil) 5 6 (face font-lock-doc-face fontified t) 6 54 (face font-lock-doc-face fontified t) 54 81 (face font-lock-doc-face fontified t) 81 82 (face font-lock-doc-face fontified t) 82 124 (face font-lock-doc-face fontified t) 124 125 (face font-lock-doc-face fontified t) 125 126 (face font-lock-doc-face fontified t) 126 127 (fontified t) 127 133 (face font-lock-keyword-face fontified t) 133 134 (fontified t) 134 142 (face font-lock-keyword-face fontified t) 142 143 (fontified t) 143 151 (fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 156 (face font-lock-variable-name-face fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 158 (fontified t) 158 159 (face (rainbow-delimiters-depth-1-face) fontified t) 159 160 (fontified t) 160 164 (fontified t) 164 165 (face font-lock-string-face fontified t) 165 175 (face font-lock-string-face fontified t) 175 176 (face font-lock-string-face fontified t) 176 196 (fontified t) 196 197 (face (rainbow-delimiters-depth-2-face) fontified t) 197 202 (fontified t) 202 212 (face font-lock-keyword-face fontified t) 212 213 (fontified t) 213 218 (face font-lock-type-face fontified t) 218 220 (fontified t) 220 221 (face font-lock-string-face fontified t) 221 230 (face font-lock-string-face fontified t) 230 238 (face font-lock-string-face fontified t) 238 239 (face font-lock-string-face fontified t) 239 240 (face (rainbow-delimiters-depth-2-face) fontified t) 240 242 (fontified t) 242 246 (fontified t) 246 249 (face font-lock-keyword-face fontified t) 249 250 (fontified t) 250 257 (face font-lock-variable-name-face fontified t) 257 270 (fontified t) 270 271 (face (rainbow-delimiters-depth-2-face) fontified t) 271 275 (fontified t) 275 276 (face (rainbow-delimiters-depth-2-face) fontified t) 276 282 (fontified t) 282 285 (face font-lock-keyword-face fontified t) 285 286 (fontified t) 286 298 (face font-lock-variable-name-face fontified t) 298 301 (fontified t) 301 302 (face (rainbow-delimiters-depth-2-face) fontified t) 302 303 (face (rainbow-delimiters-depth-2-face) fontified t) 303 309 (fontified t) 309 312 (face font-lock-keyword-face fontified t) 312 313 (fontified t) 313 316 (face font-lock-variable-name-face fontified t) 316 341 (fontified t) 341 342 (face (rainbow-delimiters-depth-2-face) fontified t) 342 343 (face font-lock-string-face fontified t) 343 348 (face font-lock-string-face fontified t) 348 349 (face font-lock-string-face fontified t) 349 350 (face (rainbow-delimiters-depth-2-face) fontified t) 350 365 (fontified t) 365 366 (face font-lock-string-face fontified t) 366 369 (face font-lock-string-face fontified t) 369 370 (face font-lock-string-face fontified t) 370 377 (fontified t) 377 385 (face font-lock-keyword-face fontified t) 385 386 (fontified t) 386 390 (face font-lock-function-name-face fontified t) 390 391 (fontified t) 391 392 (face (rainbow-delimiters-depth-2-face) fontified t) 392 396 (face font-lock-variable-name-face fontified t) 396 398 (fontified t) 398 403 (face font-lock-variable-name-face fontified t) 403 404 (face (rainbow-delimiters-depth-2-face) fontified t) 404 405 (fontified t) 405 406 (face (rainbow-delimiters-depth-2-face) fontified t) 406 415 (fontified t) 415 416 (face font-lock-string-face fontified t) 416 426 (face font-lock-string-face fontified t) 426 427 (face font-lock-string-face fontified t) 427 437 (fontified t) 437 441 (face font-lock-constant-face fontified t) 441 463 (fontified t) 463 467 (face font-lock-constant-face fontified t) 467 491 (fontified t) 491 495 (face font-lock-constant-face fontified t) 495 500 (fontified t) 500 503 (fontified t) 503 505 (face font-lock-keyword-face fontified t) 505 511 (face font-lock-keyword-face fontified t) 511 512 (fontified t) 512 513 (face (rainbow-delimiters-depth-3-face) fontified t) 513 514 (face (rainbow-delimiters-depth-3-face) fontified t) 514 515 (fontified t) 515 516 (face (rainbow-delimiters-depth-3-face) fontified t) 516 517 (fontified t) 517 529 (fontified t) 529 533 (face font-lock-constant-face fontified t) 533 551 (fontified t) 551 552 (face (rainbow-delimiters-depth-3-face) fontified t) 552 558 (fontified t) 558 559 (face (rainbow-delimiters-depth-2-face) fontified t) 559 565 (fontified t) 565 573 (face font-lock-keyword-face fontified t) 573 574 (fontified t) 574 581 (face font-lock-function-name-face fontified t) 581 582 (fontified t) 582 583 (face (rainbow-delimiters-depth-2-face) fontified t) 583 587 (face font-lock-variable-name-face fontified t) 587 588 (face (rainbow-delimiters-depth-2-face) fontified t) 588 589 (fontified t) 589 590 (face (rainbow-delimiters-depth-2-face) fontified t) 590 599 (fontified t) 599 600 (face font-lock-string-face fontified t) 600 610 (face font-lock-string-face fontified t) 610 611 (face font-lock-string-face fontified t) 611 621 (fontified t) 621 624 (face font-lock-keyword-face fontified t) 624 625 (fontified t) 625 627 (face font-lock-variable-name-face fontified t) 627 629 (face font-lock-variable-name-face fontified t) 629 632 (fontified t) 632 633 (face (rainbow-delimiters-depth-3-face) fontified t) 633 634 (face (rainbow-delimiters-depth-3-face) fontified t) 634 636 (fontified t) 636 644 (fontified t) 644 647 (face font-lock-keyword-face fontified t) 647 648 (fontified t) 648 649 (face (rainbow-delimiters-depth-3-face) fontified t) 649 652 (face font-lock-keyword-face fontified t) 652 653 (fontified t) 653 654 (face font-lock-variable-name-face fontified t) 654 655 (fontified t) 655 657 (face font-lock-keyword-face fontified t) 657 660 (fontified t) 660 662 (fontified t) 662 663 (fontified t face (rainbow-delimiters-depth-3-face)) 663 664 (fontified t) 664 665 (fontified t face (rainbow-delimiters-depth-3-face)) 665 666 (fontified t) 666 678 (fontified t) 678 680 (face font-lock-keyword-face fontified t) 680 681 (fontified t) 681 682 (face (rainbow-delimiters-depth-4-face) fontified t) 682 686 (fontified t) 686 687 (face (rainbow-delimiters-depth-5-face) fontified t) 687 688 (fontified t) 688 689 (face (rainbow-delimiters-depth-5-face) fontified t) 689 694 (fontified t) 694 695 (face font-lock-string-face fontified t) 695 696 (face font-lock-string-face fontified t) 696 697 (face font-lock-string-face fontified t) 697 701 (fontified t) 701 702 (face (rainbow-delimiters-depth-5-face) fontified t) 702 706 (fontified t) 706 707 (face (rainbow-delimiters-depth-6-face) fontified t) 707 708 (fontified t) 708 709 (face (rainbow-delimiters-depth-6-face) fontified t) 709 718 (fontified t) 718 719 (face (rainbow-delimiters-depth-6-face) fontified t) 719 722 (fontified t) 722 723 (face (rainbow-delimiters-depth-6-face) fontified t) 723 731 (fontified t) 731 732 (face (rainbow-delimiters-depth-6-face) fontified t) 732 733 (fontified t) 733 734 (face (rainbow-delimiters-depth-6-face) fontified t) 734 739 (fontified t) 739 740 (face font-lock-string-face fontified t) 740 741 (face font-lock-string-face fontified t) 741 742 (face font-lock-string-face fontified t) 742 743 (face (rainbow-delimiters-depth-5-face) fontified t) 743 744 (face (rainbow-delimiters-depth-4-face) fontified t) 744 745 (fontified t) 745 746 (face (rainbow-delimiters-depth-4-face) fontified t) 746 747 (fontified t) 747 763 (fontified t) 763 766 (face font-lock-keyword-face fontified t) 766 767 (fontified t) 767 769 (face font-lock-variable-name-face fontified t) 769 772 (fontified t) 772 775 (face font-lock-keyword-face fontified t) 775 776 (fontified t) 776 780 (face font-lock-type-face fontified t) 780 781 (face (rainbow-delimiters-depth-5-face) fontified t) 781 785 (fontified t) 785 786 (face (rainbow-delimiters-depth-6-face) fontified t) 786 787 (fontified t) 787 788 (face (rainbow-delimiters-depth-6-face) fontified t) 788 791 (fontified t) 791 792 (face (rainbow-delimiters-depth-5-face) fontified t) 792 819 (fontified t) 819 820 (face (rainbow-delimiters-depth-5-face) fontified t) 820 822 (fontified t) 822 823 (face (rainbow-delimiters-depth-5-face) fontified t) 823 837 (fontified t) 837 838 (face (rainbow-delimiters-depth-4-face) fontified t) 838 839 (fontified t) 839 843 (face font-lock-keyword-face fontified t) 843 844 (fontified t) 844 845 (face (rainbow-delimiters-depth-4-face) fontified t) 845 866 (fontified t) 866 867 (face (rainbow-delimiters-depth-5-face) fontified t) 867 880 (fontified t) 880 881 (face (rainbow-delimiters-depth-5-face) fontified t) 881 886 (fontified t) 886 887 (face (rainbow-delimiters-depth-5-face) fontified t) 887 888 (face (rainbow-delimiters-depth-5-face) fontified t) 888 902 (fontified t) 902 903 (face (rainbow-delimiters-depth-4-face) fontified t) 903 912 (fontified t) 912 913 (face (rainbow-delimiters-depth-3-face) fontified t) 913 922 (fontified t) 922 928 (face font-lock-keyword-face fontified t) 928 939 (fontified t) 939 940 (face (rainbow-delimiters-depth-2-face) fontified t) 940 946 (fontified t) 946 949 (face font-lock-keyword-face fontified t) 949 950 (fontified t) 950 951 (face (rainbow-delimiters-depth-2-face) fontified t) 951 954 (face font-lock-keyword-face fontified t) 954 955 (fontified t) 955 957 (face font-lock-variable-name-face fontified t) 957 958 (fontified t) 958 960 (face font-lock-keyword-face fontified t) 960 965 (fontified t) 965 966 (face (rainbow-delimiters-depth-2-face) fontified t) 966 967 (fontified t) 967 968 (face (rainbow-delimiters-depth-2-face) fontified t) 968 977 (fontified t) 977 980 (face font-lock-keyword-face fontified t) 980 981 (fontified t) 981 983 (face font-lock-variable-name-face fontified t) 983 1008 (fontified t) 1008 1009 (face (rainbow-delimiters-depth-3-face) fontified t) 1009 1010 (face font-lock-string-face fontified t) 1010 1012 (face font-lock-string-face fontified t) 1012 1013 (face font-lock-string-face fontified t) 1013 1014 (face (rainbow-delimiters-depth-3-face) fontified t) 1014 1017 (fontified t) 1017 1024 (fontified t) 1024 1027 (face font-lock-keyword-face fontified t) 1027 1028 (fontified t) 1028 1031 (face font-lock-variable-name-face fontified t) 1031 1041 (fontified t) 1041 1042 (face (rainbow-delimiters-depth-3-face) fontified t) 1042 1046 (fontified t) 1046 1047 (face (rainbow-delimiters-depth-4-face) fontified t) 1047 1049 (fontified t) 1049 1050 (face (rainbow-delimiters-depth-4-face) fontified t) 1050 1051 (face (rainbow-delimiters-depth-3-face) fontified t) 1051 1053 (fontified t) 1053 1062 (fontified t) 1062 1065 (face font-lock-keyword-face fontified t) 1065 1066 (fontified t) 1066 1067 (face (rainbow-delimiters-depth-3-face) fontified t) 1067 1070 (face font-lock-keyword-face fontified t) 1070 1071 (fontified t) 1071 1073 (face font-lock-variable-name-face fontified t) 1073 1074 (fontified t) 1074 1076 (face font-lock-keyword-face fontified t) 1076 1080 (fontified t) 1080 1081 (face (rainbow-delimiters-depth-3-face) fontified t) 1081 1082 (fontified t) 1082 1083 (face (rainbow-delimiters-depth-3-face) fontified t) 1083 1096 (fontified t) 1096 1099 (face font-lock-keyword-face fontified t) 1099 1100 (fontified t) 1100 1105 (face font-lock-variable-name-face fontified t) 1105 1123 (fontified t) 1123 1124 (face (rainbow-delimiters-depth-4-face) fontified t) 1124 1127 (fontified t) 1127 1128 (face (rainbow-delimiters-depth-5-face) fontified t) 1128 1130 (fontified t) 1130 1131 (face (rainbow-delimiters-depth-5-face) fontified t) 1131 1136 (fontified t) 1136 1137 (face (rainbow-delimiters-depth-4-face) fontified t) 1137 1139 (fontified t) 1139 1151 (fontified t) 1151 1154 (face font-lock-keyword-face fontified t) 1154 1155 (fontified t) 1155 1160 (face font-lock-variable-name-face fontified t) 1160 1166 (fontified t) 1166 1167 (fontified t face (rainbow-delimiters-depth-4-face)) 1167 1169 (fontified t) 1169 1170 (fontified t face (rainbow-delimiters-depth-4-face)) 1170 1178 (fontified t) 1178 1190 (fontified t) 1190 1193 (face font-lock-keyword-face fontified t) 1193 1194 (fontified t) 1194 1196 (face font-lock-variable-name-face fontified t) 1196 1221 (fontified t) 1221 1222 (face (rainbow-delimiters-depth-4-face) fontified t) 1222 1223 (face font-lock-string-face fontified t) 1223 1225 (face font-lock-string-face fontified t) 1225 1226 (face font-lock-string-face fontified t) 1226 1227 (face (rainbow-delimiters-depth-4-face) fontified t) 1227 1242 (fontified t) 1242 1244 (face font-lock-keyword-face fontified t) 1244 1245 (fontified t) 1245 1246 (face (rainbow-delimiters-depth-4-face) fontified t) 1246 1256 (fontified t) 1256 1257 (face (rainbow-delimiters-depth-4-face) fontified t) 1257 1258 (fontified t) 1258 1259 (face (rainbow-delimiters-depth-4-face) fontified t) 1259 1323 (fontified t) 1323 1324 (face (rainbow-delimiters-depth-5-face) fontified t) 1324 1325 (face font-lock-string-face fontified t) 1325 1328 (face font-lock-string-face fontified t) 1328 1329 (face font-lock-string-face fontified t) 1329 1330 (face (rainbow-delimiters-depth-5-face) fontified t) 1330 1344 (fontified t) 1344 1345 (face (rainbow-delimiters-depth-4-face) fontified t) 1345 1358 (fontified t) 1358 1360 (face font-lock-keyword-face fontified t) 1360 1361 (fontified t) 1361 1362 (face (rainbow-delimiters-depth-4-face) fontified t) 1362 1387 (fontified t) 1387 1388 (face (rainbow-delimiters-depth-4-face) fontified t) 1388 1389 (fontified t) 1389 1390 (face (rainbow-delimiters-depth-4-face) fontified t) 1390 1423 (fontified t) 1423 1424 (face (rainbow-delimiters-depth-5-face) fontified t) 1424 1425 (face font-lock-string-face fontified t) 1425 1429 (face font-lock-string-face fontified t) 1429 1430 (face font-lock-string-face fontified t) 1430 1431 (face (rainbow-delimiters-depth-5-face) fontified t) 1431 1445 (fontified t) 1445 1446 (face (rainbow-delimiters-depth-4-face) fontified t) 1446 1459 (fontified t) 1459 1461 (face font-lock-keyword-face fontified t) 1461 1462 (fontified t) 1462 1463 (face (rainbow-delimiters-depth-4-face) fontified t) 1463 1475 (fontified t) 1475 1476 (face (rainbow-delimiters-depth-4-face) fontified t) 1476 1477 (fontified t) 1477 1478 (face (rainbow-delimiters-depth-4-face) fontified t) 1478 1511 (fontified t) 1511 1512 (face (rainbow-delimiters-depth-5-face) fontified t) 1512 1513 (face font-lock-string-face fontified t) 1513 1517 (face font-lock-string-face fontified t) 1517 1518 (face font-lock-string-face fontified t) 1518 1520 (fontified t) 1520 1521 (face font-lock-string-face fontified t) 1521 1527 (face font-lock-string-face fontified t) 1527 1528 (face font-lock-string-face fontified t) 1528 1529 (face (rainbow-delimiters-depth-5-face) fontified t) 1529 1543 (fontified t) 1543 1544 (face (rainbow-delimiters-depth-4-face) fontified t) 1544 1553 (fontified t) 1553 1557 (fontified t) 1557 1559 (face font-lock-keyword-face fontified t) 1559 1560 (fontified t) 1560 1561 (face (rainbow-delimiters-depth-4-face) fontified t) 1561 1570 (fontified t) 1570 1571 (face (rainbow-delimiters-depth-4-face) fontified t) 1571 1572 (fontified t) 1572 1573 (face (rainbow-delimiters-depth-4-face) fontified t) 1573 1574 (fontified t) 1574 1622 (fontified t) 1622 1623 (face (rainbow-delimiters-depth-4-face) fontified t) 1623 1639 (fontified t) 1639 1650 (fontified t) 1650 1651 (face (rainbow-delimiters-depth-4-face) fontified t) 1651 1653 (fontified t) 1653 1654 (face (rainbow-delimiters-depth-4-face) fontified t) 1654 1656 (fontified t) 1656 1664 (fontified t) 1664 1665 (face (rainbow-delimiters-depth-3-face) fontified t) 1665 1678 (fontified t) 1678 1689 (fontified t) 1689 1690 (fontified t face (rainbow-delimiters-depth-3-face)) 1690 1692 (fontified t) 1692 1693 (fontified t face (rainbow-delimiters-depth-3-face)) 1693 1695 (fontified t) 1699 1700 (face (rainbow-delimiters-depth-2-face)) 1705 1711 (face font-lock-keyword-face) 1717 1718 (face (rainbow-delimiters-depth-1-face)) 1720 1779 (face font-lock-doc-face) 1780 1788 (face font-lock-keyword-face) 1789 1798 (face font-lock-function-name-face) 1798 1799 (face (rainbow-delimiters-depth-1-face)) 1799 1803 (face font-lock-variable-name-face) 1803 1804 (face (rainbow-delimiters-depth-1-face)) 1805 1806 (face (rainbow-delimiters-depth-1-face)) 1811 1814 (face font-lock-keyword-face) 1815 1824 (face font-lock-variable-name-face) 1850 1851 (face (rainbow-delimiters-depth-2-face)) 1851 1867 (face font-lock-string-face) 1867 1868 (face (rainbow-delimiters-depth-2-face)) 1874 1877 (face font-lock-keyword-face) 1878 1881 (face font-lock-variable-name-face) 1892 1893 (face (rainbow-delimiters-depth-2-face)) 1897 1898 (face (rainbow-delimiters-depth-2-face)) 1925 1926 (face (rainbow-delimiters-depth-2-face)) 1929 1930 (face (rainbow-delimiters-depth-2-face)) 1932 1933 (face (rainbow-delimiters-depth-1-face)) 1934 1935 (fontified nil)) . 1) (undo-tree-id37 . -636) (undo-tree-id38 . -636) (undo-tree-id39 . -666) (undo-tree-id40 . -666) (undo-tree-id41 . -747) (undo-tree-id42 . -747) (undo-tree-id43 . -1) (undo-tree-id44 . -124) (undo-tree-id45 . 1808) (undo-tree-id46 . -124) (undo-tree-id47 . -613) (undo-tree-id48 . -613) (undo-tree-id49 . -591) (undo-tree-id50 . -591) (undo-tree-id51 . -561) (undo-tree-id52 . -561) (undo-tree-id53 . -560) (undo-tree-id54 . -560) (undo-tree-id55 . -554) (undo-tree-id56 . -554) (undo-tree-id57 . -543) (undo-tree-id58 . -543) (undo-tree-id59 . -517) (undo-tree-id60 . -517) (undo-tree-id61 . -483) (undo-tree-id62 . -483) (undo-tree-id63 . -455) (undo-tree-id64 . -455) (undo-tree-id65 . -429) (undo-tree-id66 . -429) (undo-tree-id67 . -407) (undo-tree-id68 . -407) (undo-tree-id69 . -373) (undo-tree-id70 . -373) (undo-tree-id71 . -372) (undo-tree-id72 . -372) (undo-tree-id73 . -352) (undo-tree-id74 . -352) (undo-tree-id75 . -305) (undo-tree-id76 . -305) (undo-tree-id77 . -278) (undo-tree-id78 . -278) (undo-tree-id79 . -242) (undo-tree-id80 . -242) (undo-tree-id81 . -178) (undo-tree-id82 . -178) (undo-tree-id83 . -160) (undo-tree-id84 . -160) (undo-tree-id85 . -127) (undo-tree-id86 . -127) (undo-tree-id87 . -124) (undo-tree-id88 . -124) (undo-tree-id89 . -81) (undo-tree-id90 . -81) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -794) (undo-tree-id96 . -794) (undo-tree-id97 . -825) (undo-tree-id98 . -825) (undo-tree-id99 . -846) (undo-tree-id100 . -846) (undo-tree-id101 . -890) (undo-tree-id102 . -890) (undo-tree-id103 . -904) (undo-tree-id104 . -904) (undo-tree-id105 . -914) (undo-tree-id106 . -914) (undo-tree-id107 . -935) (undo-tree-id108 . -935) (undo-tree-id109 . -941) (undo-tree-id110 . -941) (undo-tree-id111 . -942) (undo-tree-id112 . -942) (undo-tree-id113 . -969) (undo-tree-id114 . -969) (undo-tree-id115 . -1016) (undo-tree-id116 . -1016) (undo-tree-id117 . -1053) (undo-tree-id118 . -1053) (undo-tree-id119 . -1054) (undo-tree-id120 . -1054) (undo-tree-id121 . -1084) (undo-tree-id122 . -1084) (undo-tree-id123 . -1139) (undo-tree-id124 . -1139) (undo-tree-id125 . -1178) (undo-tree-id126 . -1178) (undo-tree-id127 . -1229) (undo-tree-id128 . -1229) (undo-tree-id129 . -1230) (undo-tree-id130 . -1230) (undo-tree-id131 . -1260) (undo-tree-id132 . -1260) (undo-tree-id133 . -1291) (undo-tree-id134 . -1291) (undo-tree-id135 . -1332) (undo-tree-id136 . -1332) (undo-tree-id137 . -1) (undo-tree-id138 . -1934) (undo-tree-id139 . -1934) (undo-tree-id140 . -1934) (1935 . 1936) (nil rear-nonsticky t 1 . 2)) (25619 50341 884269 143000) 0 nil])
([nil nil ((8635 . 8636) 8623) nil (25619 57921 613308 869000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) ((1 . 2)) (25619 50341 269100 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8766 . 8767) (nil fontified nil 8581 . 8767) (8581 . 8767) 8580) nil (25619 57921 613307 404000) 0 nil])
([nil nil ((#("export " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 127) (undo-tree-id36 . 7) (t 25619 50258 801373 147000)) ((127 . 134) (t 25619 50288 549189 93000)) (25619 50288 463994 938000) 0 nil] [nil nil ((#("*" 0 1 (face font-lock-doc-face fontified t)) . 121) (undo-tree-id32 . -1) (#("*" 0 1 (face font-lock-doc-face fontified t)) . 79) (undo-tree-id33 . -1) (#("*" 0 1 (face font-lock-doc-face fontified t)) . 4) (undo-tree-id34 . -1) (#("/" 0 1 (face font-lock-doc-face fontified t)) . 1) (undo-tree-id35 . -1) 124 (t 25619 50032 115158 245000)) ((1 . 2) (4 . 5) (79 . 80) (121 . 122)) (25619 50255 388726 269000) 0 nil])
([nil nil ((#(";et stylesheet = new CSSStyleSheet({ media: \"print\" });" 0 1 (rear-nonsticky t fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 14 (fontified t) 14 17 (fontified t) 17 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 34 (face font-lock-type-face fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 44 (fontified t) 44 51 (face font-lock-string-face fontified t) 51 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-2-face) fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 55 (fontified t rear-nonsticky t)) . 8766)) nil (25619 57921 613305 633000) 0 nil])
nil
([nil nil ((#("**
  Make the table that will serve as the keyboard's structure from an array
  of characters that indicate the layout.
/
" 0 2 (fontified t) 2 3 (fontified t) 3 51 (fontified t) 51 78 (face font-lock-string-face fontified t) 78 120 (face font-lock-string-face fontified t) 120 121 (face font-lock-string-face syntax-table (7 . 47) fontified t) 121 122 (face font-lock-string-face fontified t)) . 1) (undo-tree-id14 . -120) (undo-tree-id15 . -120) (undo-tree-id16 . -122) (undo-tree-id17 . -120) (undo-tree-id18 . -120) (undo-tree-id19 . -122) (undo-tree-id20 . -122) (undo-tree-id21 . -120) (undo-tree-id22 . -120) (undo-tree-id23 . -78) (undo-tree-id24 . -78) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -122) (undo-tree-id28 . -122) (undo-tree-id29 . -122) (undo-tree-id30 . -120) (undo-tree-id31 . -120) 121) ((1 . 123) (t 25619 50239 129501 656000)) (25619 50238 968285 663000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 8580) (undo-tree-id159 . -1) (undo-tree-id160 . -1)) nil (25619 57921 613304 430000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 9053 . 9054) (nil fontified nil 8688 . 9054) (8688 . 9054)) nil (25619 57921 613301 200000) 0 nil])
([nil nil ((#("a { color: red; }'" 0 18 (face font-lock-string-face fontified t)) . 8667) (undo-tree-id153 . -17) (undo-tree-id154 . -17) (undo-tree-id155 . -17) (undo-tree-id156 . -18) (undo-tree-id157 . -17) (undo-tree-id158 . -17) 8684) nil (25619 57921 613298 677000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 8667) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . -1)) nil (25619 57921 613279 70000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-string-face fontified t)) . 8667) (undo-tree-id149 . 1)) nil (25619 57921 613272 468000) 0 nil])
([nil nil ((9035 . 9036) (#("." 0 1 (fontified t)) . -9035) (undo-tree-id147 . -1) (undo-tree-id148 . -1) 9036 (9034 . 9036) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -9034) (9033 . 9035) (#("'" 0 1 (fontified nil)) . -9033) (9033 . 9034) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -9033) (9033 . 9034)) nil (25619 57921 613264 698000) 0 nil])
([nil nil ((8667 . 8668) (#("
" 0 1 (face font-lock-string-face fontified t)) . -8667) (undo-tree-id162 . -1) (undo-tree-id163 . 1) (undo-tree-id164 . -1) 8666 (t 25619 57921 681581 335000)) nil (25619 58003 677513 985000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 8667)) nil (25619 58003 677498 778000) 0 nil])
([nil nil ((8769 . 8770) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -8769) (8769 . 8770) (8768 . 8770) (#("'" 0 1 (fontified nil)) . -8768) (8768 . 8769) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -8768) (8768 . 8769)) nil (25619 58003 677491 918000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8770) (undo-tree-id167 . 1) (t 25619 58003 741370 574000)) nil (25619 58020 252987 688000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8771) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 8772 (8770 . 8772)) nil (25619 58020 252979 879000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8772) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (t 25619 58020 317329 263000)) nil (25619 58088 371825 934000) 0 nil])
([nil nil (8772) nil (25619 58088 371821 704000) 0 nil])
([nil nil ((8790 . 8791) (#("'" 0 1 (fontified nil)) . -8790) (8790 . 8791) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8790) (8790 . 8791) (8789 . 8791) (#("(" 0 1 (fontified nil)) . -8789) (8788 . 8790) (8772 . 8788)) nil (25619 58088 371819 489000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 8791) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (undo-tree-id179 . -1)) nil (25619 58088 371815 653000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8819) (8817 . 8819) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -8817) (8817 . 8818) (8816 . 8818) (#("'" 0 1 (fontified nil)) . -8816) (8816 . 8817) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -8816) (8816 . 8817)) nil (25619 58088 371810 538000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8820) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1)) nil (25619 58088 371806 817000) 0 nil])
([nil nil (8820) nil (25619 58088 371801 117000) 0 nil])
([nil nil ((8838 . 8839) (#("'" 0 1 (fontified nil)) . -8838) (8838 . 8839) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8838) (8838 . 8839) (8837 . 8839) (#("(" 0 1 (fontified nil)) . -8837) (8837 . 8838) (8826 . 8837) (#("repla" 0 5 (fontified t)) . -8826) (undo-tree-id171 . -5) (undo-tree-id172 . 5) (undo-tree-id173 . -5) 8831 (8820 . 8831)) nil (25619 58088 371798 113000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 8839) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . -1)) nil (25619 58088 371789 857000) 0 nil])
([nil nil ((8920 . 8922) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -8920) (8920 . 8921) (#("'" 0 1 (face font-lock-string-face fontified t)) . 8920) (8919 . 8921) (#("'" 0 1 (fontified nil)) . -8919) (8919 . 8920) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -8919) (8919 . 8920)) nil (25619 58088 371771 384000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8919) (t 25619 58088 489163 361000)) nil (25619 58168 172659 502000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 8919) (undo-tree-id211 . 1) (undo-tree-id212 . -1) (undo-tree-id213 . -1)) nil (25619 58168 172657 187000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-string-face fontified t)) . 8919)) nil (25619 58168 172652 874000) 0 nil])
([nil nil ((8919 . 8920) (#("    " 0 4 (face font-lock-string-face fontified nil)) . 8919) (undo-tree-id206 . 4) (#("
" 0 1 (face font-lock-string-face fontified t)) . -8919) (undo-tree-id207 . -1) (undo-tree-id208 . 1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 8918) nil (25619 58168 172650 707000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -8948) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 8949 (8946 . 8949) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -8946) (8946 . 8947) (#("'" 0 1 (face font-lock-string-face fontified t)) . 8946) (8945 . 8947) (#("'" 0 1 (fontified nil)) . -8945) (8945 . 8946) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -8945) (8945 . 8946)) nil (25619 58168 172642 333000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8949) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1)) nil (25619 58168 172636 351000) 0 nil])
([nil nil (8949) nil (25619 58168 172632 155000) 0 nil])
([nil nil ((8967 . 8968) (#("'" 0 1 (fontified nil)) . -8967) (8967 . 8968) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8967) (8967 . 8968) (8966 . 8968) (#("(" 0 1 (fontified nil)) . -8966) (8966 . 8967) (8955 . 8966) (#("repla" 0 5 (fontified t)) . -8955) (undo-tree-id198 . -5) (undo-tree-id199 . 5) (undo-tree-id200 . -5) 8960 (8949 . 8960)) nil (25619 58168 172629 366000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 8968) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . -1)) nil (25619 58168 172621 520000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8995) (8993 . 8995) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -8993) (8993 . 8994) (8992 . 8994) (#("'" 0 1 (fontified nil)) . -8992) (8992 . 8993) (#("'" 0 1 (face font-lock-string-face fontified nil)) . -8992) (8992 . 8993)) nil (25619 58168 172613 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8996) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1)) nil (25619 58168 172609 143000) 0 nil])
([nil nil (8996) nil (25619 58168 172604 432000) 0 nil])
([nil nil ((9014 . 9015) (#("'" 0 1 (fontified nil)) . -9014) (9014 . 9015) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -9014) (9014 . 9015) (9013 . 9015) (#("(" 0 1 (fontified nil)) . -9013) (9013 . 9014) (9002 . 9013) (#("replace" 0 7 (fontified t)) . -9002) (undo-tree-id189 . -7) (undo-tree-id190 . 7) (undo-tree-id191 . -7) 9009 (8996 . 9009)) nil (25619 58168 172601 505000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . 9015) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . -1)) nil (25619 58168 172592 920000) 0 nil])
([nil nil ((9079 . 9080) (#("    " 0 4 (face font-lock-string-face fontified nil)) . 9079) (#("
" 0 1 (face font-lock-string-face fontified t)) . -9079) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 9015) nil (25619 58168 172583 283000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -8733) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 8734 (8728 . 8734) (8725 . 8728) (#("g" 0 1 (fontified t face font-lock-string-face)) . -8725) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -8726) (undo-tree-id4 . -1) 8727 (8726 . 8727) (#("e" 0 1 (fontified t face font-lock-string-face)) . -8726) (undo-tree-id5 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -8727) (undo-tree-id6 . -1) 8728 (8721 . 8728) (t 25619 58168 304976 477000)) nil (25620 17086 37597 42000) 0 nil])
([nil nil ((8729 . 8730)) nil (25620 17427 112354 246000) 0 nil])
([nil nil ((8728 . 8734) (t 25620 17086 86472 925000)) nil (25620 17442 536700 723000) 0 nil] [nil nil ((8613 . 8617) (#("c" 0 1 (fontified t face font-lock-keyword-face)) . 8613) (t 25620 17086 86472 925000)) ((8613 . 8614) (#("tyle" 0 4 (fontified t)) . 8613) (undo-tree-id7 . -3) (undo-tree-id8 . -3)) (25620 17427 112034 933000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-string-face)) . 8736)) nil (25620 17442 536698 998000) 0 nil])
nil
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . 8736)) nil (25620 17442 536697 551000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face font-lock-string-face)) . 8736)) nil (25620 17442 536694 780000) 0 nil])
([nil nil ((8736 . 8740)) nil (25620 17442 536688 750000) 0 nil])
([nil nil ((8782 . 8785) (t 25620 17442 612152 482000)) nil (25620 17581 467262 922000) 0 nil])
([nil nil ((8862 . 8867) (t 25620 17581 578472 850000)) nil (25620 19356 736779 990000) 0 nil])
([nil nil ((8996 . 9001)) nil (25620 19356 736777 588000) 0 nil])
([nil current ((9048 . 9053)) nil (25620 19356 736771 610000) 0 nil])
nil
